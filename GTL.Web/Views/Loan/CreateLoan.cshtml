@model GTL.Application.Features.Loans.Commands.CreateLoan.CreateLoanCommand
@{
    ViewData["Title"] = "CreateLoan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>CreateLoan</h1>

@{
    if (ViewBag.Status != null)
    {
        var model = ViewBag.Status as Status;
        <partial name="_StatusMessage" model="model" />
    }
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateLoan">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Loan.MemberSsn" class="control-label"></label>
                <input asp-for="Loan.MemberSsn" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Loan.CopyBarcode" class="control-label"></label>
                <input asp-for="Loan.CopyBarcode" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Loan.LibraryName" class="control-label"></label>
                <select asp-for="Loan.LibraryName" class="form-control">
                    <option selected value=""></option>
                    <option value="Accounting">Accounting</option>
                    <option value="BusinessSales">BusinessSales</option>
                    <option value="NationalSales">NationalSales</option>
                    <option value="Service">Service</option>
                    <option value="TechnicalSales">TechnicalSales</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to Home</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
